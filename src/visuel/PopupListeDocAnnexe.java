/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visuel;

import arbreGene.DocAnnexeImage;
import arbreGene.DocAnnexeTxt;
import arbreGene.FPersonne;
import arbreGene.ModelDocAnnexe;
import arbreGene.ModelTabDocAnnexe;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author Guillet
 */
public class PopupListeDocAnnexe extends javax.swing.JDialog {

    /**
     * Creates new form PopupListeDocAnnexe
     */
    public PopupListeDocAnnexe(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public PopupListeDocAnnexe(FPersonne fp) {
        super();
        initComponents();
        maPersonne = fp;
        ArrayList<ModelDocAnnexe> listeDoc = fp.getIdentite().getListeDoc();
        if (listeDoc != null) {
            for (int ind = 0; ind < listeDoc.size(); ind++)
            {
                mod.addData(ind, listeDoc.get(ind));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabListeDoc = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ajoutLien = new javax.swing.JButton();
        modif = new javax.swing.JButton();
        sup = new javax.swing.JButton();
        Ok = new javax.swing.JButton();
        annuler = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        choixTypeDoc = new javax.swing.JComboBox();
        apercu = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabListeDoc.setModel(mod);
        tabListeDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabListeDocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabListeDoc);

        jLabel1.setText("Apercu :");

        ajoutLien.setText("en Annexe");
        ajoutLien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutLienActionPerformed(evt);
            }
        });

        modif.setText("Modifier");
        modif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifActionPerformed(evt);
            }
        });

        sup.setText("Supprimer");
        sup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supActionPerformed(evt);
            }
        });

        Ok.setText("Ok");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        annuler.setText("Annuler");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerActionPerformed(evt);
            }
        });

        jLabel2.setText("Ajout");

        choixTypeDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "une image", "un texte" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(choixTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ajoutLien)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Ok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(annuler))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(modif)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sup)))
                .addGap(130, 130, 130))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modif)
                    .addComponent(sup))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(choixTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ajoutLien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annuler)
                    .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout apercuLayout = new javax.swing.GroupLayout(apercu);
        apercu.setLayout(apercuLayout);
        apercuLayout.setHorizontalGroup(
            apercuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        apercuLayout.setVerticalGroup(
            apercuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 291, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(apercu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apercu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ajoutLienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutLienActionPerformed
        
        ModelDocAnnexe tl1 = null;
        switch (choixTypeDoc.getSelectedIndex()) 
        {
            case 0: //image
                tl1 = new DocAnnexeImage();
                break;
            case 1: //txt
                tl1 = new DocAnnexeTxt();
                break;
        }
        tl1.getPopup(this);
        
    }//GEN-LAST:event_ajoutLienActionPerformed

    private void modifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifActionPerformed
        int select = tabListeDoc.getSelectedRow();
        if (select != -1)
        {
            mod.getDoc(select).getPopup(this);
        }
    }//GEN-LAST:event_modifActionPerformed

    private void supActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supActionPerformed
        Supprime ();
    }//GEN-LAST:event_supActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        if (listeASupprimer != null)
        {
            for (int ind = 0; ind < listeASupprimer.size(); ind++)
            {
                maPersonne.getIdentite().getListeDoc().remove(listeASupprimer.get(ind));
            }
        }
        
        if (listeACreer != null) 
        {
            for (int ind = 0; ind < listeACreer.size(); ind++)
            {
                maPersonne.getIdentite().getListeDoc().add(listeACreer.get(ind));
            }
        }
        dispose();
    }//GEN-LAST:event_OkActionPerformed

    private void annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerActionPerformed
        dispose();
    }//GEN-LAST:event_annulerActionPerformed

    private void tabListeDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabListeDocMouseClicked
        int select = tabListeDoc.getSelectedRow();
        apercu.removeAll();
        if (select != -1)
        {
            JPanel panneau = mod.getDoc(select).getApercu();
            javax.swing.GroupLayout apercuLayout = new javax.swing.GroupLayout(apercu);
            apercu.setLayout(apercuLayout);
            apercuLayout.setHorizontalGroup(
                apercuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panneau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            apercuLayout.setVerticalGroup(
                apercuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panneau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            
            //FIXME: apercu non affiché
        }
        
    }//GEN-LAST:event_tabListeDocMouseClicked
    
    public void Supprime () {
        System.out.println("test suprime");
        int select = tabListeDoc.getSelectedRow();
        int ind = mod.getId(select);
        if (ind != -1) // ancien lien existe dans l'arbre donc a supprimer
        {
            listeASupprimer.add(mod.getDoc(select));
        }
        else // ancien lien pas encore créé dans l'arbre donc a enlever des éléments à créer
        {
            if (listeACreer != null)
            {
                for (int ind2 = 0; ind2 < listeACreer.size(); ind2++)
                {
                    if (listeACreer.get(ind2) == mod.getDoc(select))
                    {
                        listeACreer.remove(ind2);
                    }
                }
            }
        }
        mod.removeRow(select);
        mod.fireTableStructureChanged();
    }
    
    public void Ajout (ModelDocAnnexe doc) {
        if (doc != null)
        {
            listeACreer.add(doc);
            mod.addData(-1, doc);
            mod.fireTableStructureChanged();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PopupListeDocAnnexe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PopupListeDocAnnexe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PopupListeDocAnnexe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PopupListeDocAnnexe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PopupListeDocAnnexe dialog = new PopupListeDocAnnexe(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ok;
    private javax.swing.JButton ajoutLien;
    private javax.swing.JButton annuler;
    private javax.swing.JPanel apercu;
    private javax.swing.JComboBox choixTypeDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modif;
    private javax.swing.JButton sup;
    private javax.swing.JTable tabListeDoc;
    // End of variables declaration//GEN-END:variables
    private ModelTabDocAnnexe mod = new ModelTabDocAnnexe();
    private ArrayList <ModelDocAnnexe> listeASupprimer = new ArrayList <ModelDocAnnexe> ();
    private ArrayList <ModelDocAnnexe> listeACreer = new ArrayList <ModelDocAnnexe> ();
    private FPersonne maPersonne;
}
