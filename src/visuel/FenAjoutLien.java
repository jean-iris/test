/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FenAjoutLien.java
 *
 * Created on 11 févr. 2012, 19:43:27
 */
package visuel;

import arbreGene.FPersonne;
import arbreGene.Personne;
import arbreGene.TypeLien;

/**
 *
 * @author jean
 */
public class FenAjoutLien extends javax.swing.JPanel {

    /** Creates new form FenAjoutLien */
    public FenAjoutLien() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        choixAjout = new javax.swing.JComboBox();
        ajoutPers = new javax.swing.JButton();
        visuLiens = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Ajouter : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(jLabel1, gridBagConstraints);

        choixAjout.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Epoux(se)", "Père", "Mère", "Fils", "Fille", "Nouvelle personne" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(choixAjout, gridBagConstraints);

        ajoutPers.setText("OK");
        ajoutPers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutPersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        add(ajoutPers, gridBagConstraints);

        visuLiens.setText("Visualiser la liste des liens");
        visuLiens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visuLiensActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        add(visuLiens, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void ajoutPersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutPersActionPerformed
        FenPrinc fen = (FenPrinc)getRootPane().getParent();
        FenArbre fenA = (FenArbre)fen.getSplitPrincipal().getOngletArbre().getSelectedComponent();
        Integer idNouveau = fenA.getArbre().getMaxIndice() + 1;
        Integer idCourent = fenA.getIdCourant();
        
        Personne pers = new Personne();
        FPersonne fpers = new FPersonne(idNouveau, pers);
        fenA.getArbre().maj(idNouveau, fpers);
        
        switch (choixAjout.getSelectedIndex()) 
        {
            case 0: //Epoux(se)
                if (fenA.getArbre().get(idCourent).getIdentite().getSexe().equals("Homme"))
                {
                    pers.setSexe("Femme");
                }
                fenA.getArbre().get(idCourent).addTypeLiens(new TypeLien(idNouveau, "marrié", null, null, 2));
                fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(idCourent, "marrié", null, null, 2));
                break;
            case 1: //Parent pere
                pers.setNom(fenA.getArbre().get(idCourent).getIdentite().getNom());
                fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(idCourent, "parent de", null, null, 3));
                fenA.getArbre().get(idCourent).addTypeLiens(new TypeLien(idNouveau, "enfant de", null, null, 1));
                break;
            case 2: //Parent mere
                pers.setSexe("Femme");
                fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(idCourent, "parent de", null, null, 3));
                fenA.getArbre().get(idCourent).addTypeLiens(new TypeLien(idNouveau, "enfant de", null, null, 1));
                break;
            case 3: //Enfant fils
                if (fenA.getArbre().get(idCourent).getIdentite().getSexe().equals("Homme"))
                {
                    pers.setNom(fenA.getArbre().get(idCourent).getIdentite().getNom());
                }
                fenA.getArbre().get(idCourent).addTypeLiens(new TypeLien(idNouveau, "parent de", null, null, 3));
                fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(idCourent, "enfant de", null, null, 1));
                if (fenA.getArbre().get(idCourent).getListeTypeLiens() != null) {
                    for (int ind = 0; ind < fenA.getArbre().get(idCourent).getListeTypeLiens().size(); ind++)
                    {
                        if (fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getType() == 2)
                        {
                            fenA.getArbre().get(fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getAvecPersonne()).addTypeLiens(new TypeLien(idNouveau, "parent de", null, null, 3));
                            fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getAvecPersonne(), "enfant de", null, null, 1));
                        }
                    }
                }
                break;
            case 4: //Enfant fille
                pers.setSexe("Femme");
                if (fenA.getArbre().get(idCourent).getIdentite().getSexe().equals("Homme"))
                {
                    pers.setNom(fenA.getArbre().get(idCourent).getIdentite().getNom());
                }
                fenA.getArbre().get(idCourent).addTypeLiens(new TypeLien(idNouveau, "parent de", null, null, 3));
                fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(idCourent, "enfant de", null, null, 1));
                if (fenA.getArbre().get(idCourent).getListeTypeLiens() != null) {
                    for (int ind = 0; ind < fenA.getArbre().get(idCourent).getListeTypeLiens().size(); ind++)
                    {
                        if (fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getType() == 2)
                        {
                            fenA.getArbre().get(fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getAvecPersonne()).addTypeLiens(new TypeLien(idNouveau, "parent de", null, null, 3));
                            fenA.getArbre().get(idNouveau).addTypeLiens(new TypeLien(fenA.getArbre().get(idCourent).getListeTypeLiens().get(ind).getAvecPersonne(), "enfant de", null, null, 1));
                        }
                    }
                }
                break;
            case 5: //Nouvelle personne
                //pas de lien à metre en place
                break;
            default: //impossible
                break;
        }
        fen.getSplitPrincipal().regenerer(idNouveau);
    }//GEN-LAST:event_ajoutPersActionPerformed

    private void visuLiensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visuLiensActionPerformed
        // TODO créer la popup liste liens
        FenPrinc fen = (FenPrinc)getRootPane().getParent();
        FenArbre fenA = (FenArbre)fen.getSplitPrincipal().getOngletArbre().getSelectedComponent();
        PopupListeLien popup = new PopupListeLien(fenA.getArbre().get(fenA.getIdCourant()), fenA.getArbre());
        popup.setVisible(true);
    }//GEN-LAST:event_visuLiensActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajoutPers;
    private javax.swing.JComboBox choixAjout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton visuLiens;
    // End of variables declaration//GEN-END:variables
}
